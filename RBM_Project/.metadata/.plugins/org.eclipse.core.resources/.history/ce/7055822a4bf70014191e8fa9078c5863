import time
from Datasets import getDataset
from Machines.RBM import RBM
from pylab import *

NUM_EPOCHS = 7500
VISIBLES = 9
HIDDEN = 10
PROBLEM = "BarsAndStripes"


def execute(machine_type, k, learning_rate):
    train_test_iterator = getDataset(PROBLEM, VISIBLES, kfolds = 0)
    t1 = time.time()
    for i, data_indexs in enumerate(train_test_iterator):
        machine = RBM(HIDDEN,VISIBLES, data_indexs, learning_rate, 0., k = k, type = machine_type)
        learning_algorithm = machine.trainStep    
        iters = 0
        monit_likelihood = []
        while iters < NUM_EPOCHS:
            iters += 1
            learning_algorithm()
            if iters % 20 == 0:
                monit_likelihood.append(machine.compute_KL())
        break
    print "TEST_FINISHED in %.1f seconds" % (time.time()-t1)
    return monit_likelihood

figure()
for i in range(2):
    likelihood_proposal_1 = execute(machine_type = "equal_weights", k = 1, learning_rate=0.5, momentum_rate = 0.9);   plot(likelihood_proposal_1, 'r', label = "CD-1 Equal weights")
#likelihood_proposal_3 = execute(machine_type = "exact", k = 1, learning_rate=0.1);           plot(likelihood_proposal_3, label = "Exact")
for i in range(2):
    likelihood_proposal_4 = execute(machine_type = "model_weights", k = 1, learning_rate=0.5, momentum_rate = 0.9);   plot(likelihood_proposal_4, 'g', label = "CD-1 Model weights")
legend()
show()

